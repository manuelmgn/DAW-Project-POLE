services:
    db:
        image: postgres:17.0
        container_name: postgres_db
        restart: always
        environment:
            POSTGRES_USER: a22manuelma
            POSTGRES_PASSWORD: password
            POSTGRES_DB: poledb
        volumes:
            - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
        ports:
            - '5533:5432'
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U a22manuelma -d poledb && psql -U a22manuelma -d poledb -c 'SELECT 1'"]
            interval: 5s
            timeout: 5s
            retries: 15
            start_period: 10s
        tty: true

    db_admin:
        image: dpage/pgadmin4:8.12.0
        container_name: pgadmin
        restart: always
        environment:
            PGADMIN_DEFAULT_EMAIL: a22manuelma@iessanclemente.net
            PGADMIN_DEFAULT_PASSWORD: password
        ports:
            - '5534:80'
        depends_on:
            - db
        tty: true

    fastapi_app:
        build: ./app_fastapi
        container_name: fastapi_app
        ports:
            - '5535:8000'
        volumes:
            - ./app_fastapi:/app_fastapi
        # command: uvicorn main:app --host 0.0.0.0 --port 8000
        depends_on:
            db:
                condition: service_healthy
        environment:
            DATABASE_URL: postgresql://a22manuelma:password@postgres_db:5432/poledb?sslmode=disable
        tty: true

    flask_app:
        build: ./app_flask
        container_name: flask_app
        ports:
            - '5536:5000'
        environment:
            # FLASK_APP: 'app.py'
            # FLASK_APP: '__init__.py' # Punto de entrada usando o Factory Pattern en lugar de app.py
            FLASK_ENV: 'development' # Cambiar a "production" se Ã© preciso
            FASTAPI_URL: http://fastapi_app:8000
        volumes:
            - ./app_flask:/app_flask
        depends_on:
            - db
            - fastapi_app
        tty: true

volumes:
    db_data:
